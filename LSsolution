#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Nov 16 16:24:44 2019

@author: michaelyoung
"""
import numpy as np
def dataset():
        X=np.asarray(np.zeros((5, 9))) #length, width
        for i in range(X.shape[1]):
            x=np.random.normal(0, 1, size=X.shape[1])
#            print(x)
            
            X[i:]=x
            for j in range(X.shape[0]):
                y = 0.5 * X[j,0] ** 2 + X[j,0] + 2 + np.random.normal(0, 1, size=X.shape[0])
#             y = 0.5 * x ** 2 + x + 2 + np.random.normal(0, 1, size=X.shape[1])
        Y=y.reshape(X.shape[0],-1)
        return (X, Y)



def xtransform(x, d):
    X=np.ones(x.shape[0])
    X=np.reshape(X, (x.shape[0], 1))
    
    for i in range(x.shape[1]):
        row=x[:,i]
        row=np.reshape(row, (x.shape[0], 1))
        rows=x[:,i]
        rows=np.reshape(row, (x.shape[0], 1))
        for j in range(1,d):
            
            rows=np.hstack((rows, row**(j+1))) #error in here
       
        X=np.hstack((X, rows))
    
        
    
#    print(X)
    return X
        
def LSsolution(a, y):

    xtx=np.dot(np.transpose(a), a)
    xty=np.dot(np.transpose(a), y)


    # xtx=np.transpose(xtx)
    # xty=np.transpose(xty)

    # print(xtx)
    # print(xty)

    try:
            beta=np.linalg.solve(xtx, xty)
    except:
            xtxinv=np.linalg.inv(xtx)
            beta=np.dot(xtxinv, np.dot(np.transpose(a), y))

    return beta        